/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import control.EmprestimoControl;
import control.ProfessorControl;
import java.awt.Dimension;
import java.util.List;
import javax.swing.JOptionPane;
import model.Emprestimo;
import model.Professor;
import view.tm.ExemplaresPegosTM;

/**
 *
 * @author Jean Barcellos <jeanbarcellos@hotmail.com>
 */
public class CadastroProfessorDetalheView extends javax.swing.JInternalFrame {

    private static final long serialVersionUID = -6461326896631712813L;

    private ProfessorControl professorControl;
    private EmprestimoControl emprestimoControl;
    private ExemplaresPegosTM exemplaresTM;
    private Professor professor;

    /**
     * Creates new form CadastroProfessorDetalheView
     */
    public CadastroProfessorDetalheView(int id) {
        initComponents();

        this.professorControl = new ProfessorControl();
        this.emprestimoControl = new EmprestimoControl();

        this.popularFormulario(id);

        this.gerenciarBotoes(false, false, true);

        this.bloquearFormulario();

        this.carregarTabela();
    }

    /**
     * Popula o formulário
     *
     * @param id
     */
    private void popularFormulario(int id) {
        this.professor = this.professorControl.getProfessor(id);

        textId.setText("" + this.professor.getId());
        textNome.setText(this.professor.getNome());
        textMatricula.setText("" + this.professor.getMatricula());
    }

    /**
     * Posiciona o painel no mei da tela
     */
    public void setPosicao() {
        Dimension d = this.getDesktopPane().getSize();
        this.setLocation((d.width - this.getSize().width) / 2, (d.height - this.getSize().height) / 2);
    }

    /**
     * Popula a tabela com a lista de cursos
     */
    private void carregarTabela() {
        List<Emprestimo> lista = this.emprestimoControl.getExemplaresPegos(professor.getId());

        this.exemplaresTM = new ExemplaresPegosTM(lista);
        tableLivros.setModel(exemplaresTM);
        tableLivros.getColumnModel().getColumn(0).setPreferredWidth(250);
        tableLivros.getColumnModel().getColumn(1).setPreferredWidth(150);
        tableLivros.getColumnModel().getColumn(2).setPreferredWidth(100);
        tableLivros.getColumnModel().getColumn(3).setPreferredWidth(55);
        tableLivros.getColumnModel().getColumn(4).setPreferredWidth(55);
    }

    /**
     * Valida o formulário;
     *
     * @return
     */
    private boolean validarFormulario() {
        // Campo Nome
        if (textNome.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Você deve preencher o nome.");
            textNome.requestFocus();
            return false;
        }
        // Campo Nome
        if (textMatricula.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Você deve preencher a matrícula.");
            textMatricula.requestFocus();
            return false;
        }
        return true;
    }

    /**
     * Libera o formulário para edição
     */
    private void liberarFormulario() {
        textNome.setEnabled(true);
        textMatricula.setEnabled(true);
    }

    /**
     * Bloqueia o formulário contra edições
     */
    private void bloquearFormulario() {
        textNome.setEnabled(false);
        textMatricula.setEnabled(false);
    }

    /**
     * Gerenciar os botões
     *
     * @param salvar Button Salvar
     * @param cancelar BUtton Cancelar
     * @param editar Button Editar
     */
    private void gerenciarBotoes(boolean salvar, boolean cancelar, boolean editar) {
        buttonSalvar.setEnabled(salvar);
        buttonCancelar.setEnabled(cancelar);
        buttonEditar.setEnabled(editar);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelProfessor = new javax.swing.JPanel();
        labelId = new javax.swing.JLabel();
        textId = new javax.swing.JTextField();
        labelNome = new javax.swing.JLabel();
        textNome = new javax.swing.JTextField();
        labelMatricula = new javax.swing.JLabel();
        textMatricula = new javax.swing.JTextField();
        buttonSalvar = new javax.swing.JButton();
        buttonCancelar = new javax.swing.JButton();
        panelLivros = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableLivros = new javax.swing.JTable();
        buttonEditar = new javax.swing.JButton();

        setClosable(true);
        setTitle("Detalhes do Professor");

        panelProfessor.setBorder(javax.swing.BorderFactory.createTitledBorder("Professor"));

        labelId.setText("ID:");

        textId.setEditable(false);

        labelNome.setText("Nome:");

        labelMatricula.setText("Matrícula:");

        buttonSalvar.setText("Salvar");
        buttonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSalvarActionPerformed(evt);
            }
        });

        buttonCancelar.setText("Cancelar");
        buttonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelProfessorLayout = new javax.swing.GroupLayout(panelProfessor);
        panelProfessor.setLayout(panelProfessorLayout);
        panelProfessorLayout.setHorizontalGroup(
            panelProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelProfessorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labelId)
                    .addComponent(labelMatricula)
                    .addComponent(labelNome))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelProfessorLayout.createSequentialGroup()
                        .addGroup(panelProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textId, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panelProfessorLayout.createSequentialGroup()
                                .addComponent(buttonSalvar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(buttonCancelar)))
                        .addGap(0, 113, Short.MAX_VALUE))
                    .addComponent(textNome))
                .addContainerGap())
        );
        panelProfessorLayout.setVerticalGroup(
            panelProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelProfessorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelId)
                    .addComponent(textId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNome)
                    .addComponent(textNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelMatricula)
                    .addComponent(textMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonSalvar)
                    .addComponent(buttonCancelar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelLivros.setBorder(javax.swing.BorderFactory.createTitledBorder("Livros pegos emprestados"));

        tableLivros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Título", "Autor", "Edição", "Data Emprestimo", "Data Entrega"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableLivros);

        javax.swing.GroupLayout panelLivrosLayout = new javax.swing.GroupLayout(panelLivros);
        panelLivros.setLayout(panelLivrosLayout);
        panelLivrosLayout.setHorizontalGroup(
            panelLivrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLivrosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 670, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelLivrosLayout.setVerticalGroup(
            panelLivrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLivrosLayout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        buttonEditar.setText("Editar Dados");
        buttonEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEditarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelLivros, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(panelProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buttonEditar))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(buttonEditar)
                .addGap(18, 18, 18)
                .addComponent(panelLivros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSalvarActionPerformed

        boolean validacao = this.validarFormulario();

        if (validacao) {
            String nome = textNome.getText();
            int matricula = Integer.parseInt(textMatricula.getText());

            professor.setNome(nome);
            professor.setMatricula(matricula);

            boolean retorno = professorControl.alterar(professor);

            if (retorno) {
                CadastroProfessorView.carregarTabela();
                JOptionPane.showMessageDialog(null, "Professor alterado com sucesso.");
            } else {
                JOptionPane.showMessageDialog(null, "Erro ao tentar alterar o professor.");
            }
            this.bloquearFormulario();
            this.gerenciarBotoes(false, false, true);
        }
    }//GEN-LAST:event_buttonSalvarActionPerformed

    private void buttonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelarActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_buttonCancelarActionPerformed

    private void buttonEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEditarActionPerformed
        this.liberarFormulario();

        this.gerenciarBotoes(true, true, false);
    }//GEN-LAST:event_buttonEditarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCancelar;
    private javax.swing.JButton buttonEditar;
    private javax.swing.JButton buttonSalvar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelId;
    private javax.swing.JLabel labelMatricula;
    private javax.swing.JLabel labelNome;
    private javax.swing.JPanel panelLivros;
    private javax.swing.JPanel panelProfessor;
    private javax.swing.JTable tableLivros;
    private javax.swing.JTextField textId;
    private javax.swing.JTextField textMatricula;
    private javax.swing.JTextField textNome;
    // End of variables declaration//GEN-END:variables
}
