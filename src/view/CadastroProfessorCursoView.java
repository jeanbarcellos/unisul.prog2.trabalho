package view;

import control.CursoControl;
import control.ProfessorControl;
import java.awt.Dimension;
import java.util.List;
import javax.swing.JOptionPane;
import model.Curso;
import model.Professor;
import view.tm.CursoTM;

/**
 *
 * @author Jean Barcellos <jeanbarcellos@hotmail.com>
 */
public class CadastroProfessorCursoView extends javax.swing.JInternalFrame {

    private ProfessorControl professorControl;
    private Professor professor;

    private CursoControl cursoControl;
    private CursoTM cursoTM;
    private List<Curso> cursos;

    /**
     * Creates new form CadastroProfessorCursoView
     */
    public CadastroProfessorCursoView(int id) {
        initComponents();

        this.cursoControl = new CursoControl();
        this.professorControl = new ProfessorControl();

        this.cursos = this.cursoControl.getCursos();

        this.popularFormulario(id);

        this.carregarTabela();

        this.carregarCombo();
    }

    /**
     * Posiciona o painel no mei da tela
     */
    public void setPosicao() {
        Dimension d = this.getDesktopPane().getSize();
        this.setLocation((d.width - this.getSize().width) / 2, (d.height - this.getSize().height) / 2);
    }

    /**
     * Popula o formulário
     *
     * @param id
     */
    private void popularFormulario(int id) {
        this.professor = this.professorControl.getProfessor(id);

        textId.setText("" + this.professor.getId());
        textNome.setText(this.professor.getNome());
        textMatricula.setText("" + this.professor.getMatricula());
    }

    /**
     * Popula a tabela com a lista de cursos
     */
    private void carregarTabela() {
        List<Curso> lista = this.professorControl.getCursosParticipa(this.professor.getId());

        this.cursoTM = new CursoTM(lista);
        tableCursoLista.setModel(cursoTM);
        tableCursoLista.getColumnModel().getColumn(0).setPreferredWidth(50);
        tableCursoLista.getColumnModel().getColumn(1).setPreferredWidth(250);
    }

    /**
     * Popula o ComboBox de Cursos
     */
    public void carregarCombo() {
        this.comboCurso.removeAllItems();

        this.comboCurso.addItem("Selecione");
        for (int i = 0; i < this.cursos.size(); i++) {
            this.comboCurso.addItem(this.cursos.get(i).getNome());
        }
    }

    /**
     * Valida o formulário;
     *
     * @return
     */
    private boolean validarFormulario() {
        if (comboCurso.getSelectedIndex() < 1) {
            JOptionPane.showMessageDialog(null, "Você deve selecionar o curso.");
            comboCurso.requestFocus();
            return false;
        }
        return true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelProfessor = new javax.swing.JPanel();
        labelId = new javax.swing.JLabel();
        textId = new javax.swing.JTextField();
        labelNome = new javax.swing.JLabel();
        textNome = new javax.swing.JTextField();
        labelMatricula = new javax.swing.JLabel();
        textMatricula = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        scrollPaneCursoLista = new javax.swing.JScrollPane();
        tableCursoLista = new javax.swing.JTable();
        buttonExcluir = new javax.swing.JButton();
        curso = new javax.swing.JLabel();
        comboCurso = new javax.swing.JComboBox<>();
        buttonAdicionar = new javax.swing.JButton();

        setClosable(true);
        setTitle("Cursos que participa");

        panelProfessor.setBorder(javax.swing.BorderFactory.createTitledBorder("Professor"));

        labelId.setText("ID:");

        textId.setEditable(false);

        labelNome.setText("Nome:");

        textNome.setEditable(false);
        textNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textNomeActionPerformed(evt);
            }
        });

        labelMatricula.setText("Matrícula:");

        textMatricula.setEditable(false);

        javax.swing.GroupLayout panelProfessorLayout = new javax.swing.GroupLayout(panelProfessor);
        panelProfessor.setLayout(panelProfessorLayout);
        panelProfessorLayout.setHorizontalGroup(
            panelProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelProfessorLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(panelProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labelId)
                    .addComponent(labelNome))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textNome)
                    .addGroup(panelProfessorLayout.createSequentialGroup()
                        .addComponent(textId, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 243, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(panelProfessorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelMatricula)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelProfessorLayout.setVerticalGroup(
            panelProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelProfessorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelId)
                    .addComponent(textId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNome)
                    .addComponent(textNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelProfessorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelMatricula)
                    .addComponent(textMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Cursos que participa"));

        tableCursoLista.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableCursoLista.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tableCursoLista.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableCursoListaMouseClicked(evt);
            }
        });
        scrollPaneCursoLista.setViewportView(tableCursoLista);

        buttonExcluir.setText("Excluir");
        buttonExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonExcluirActionPerformed(evt);
            }
        });

        curso.setText("Curso:");

        comboCurso.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        buttonAdicionar.setText("Aidionar");
        buttonAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAdicionarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(buttonExcluir))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(curso)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(buttonAdicionar)
                            .addComponent(comboCurso, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(scrollPaneCursoLista, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(curso)
                    .addComponent(comboCurso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonAdicionar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(scrollPaneCursoLista, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonExcluir))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelProfessor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textNomeActionPerformed

    private void buttonAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAdicionarActionPerformed

        boolean validacao = this.validarFormulario();

        if (validacao) {
            int cursoSel = comboCurso.getSelectedIndex() - 1;
            Curso curso = null;

            for (int i = 0; i < this.cursos.size(); i++) {
                if (i == cursoSel) {
                    curso = this.cursos.get(i);
                    i = cursos.size();
                }
            }
            // Envia o objeto criado para o controlador               
            boolean retorno = this.professorControl.adicionarCurso(professor.getId(), curso);

            if (retorno) {
                this.carregarTabela();
                JOptionPane.showMessageDialog(null, "Curso associado ao Professor.");
            } else {
                JOptionPane.showMessageDialog(null, "Erro ao Tentar associar Aluno.");
                this.setVisible(false);
            }
        }

    }//GEN-LAST:event_buttonAdicionarActionPerformed

    private void tableCursoListaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableCursoListaMouseClicked

    }//GEN-LAST:event_tableCursoListaMouseClicked

    private void buttonExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonExcluirActionPerformed
        int linha = tableCursoLista.getSelectedRow();
        
        if (linha < 0) {
            JOptionPane.showMessageDialog(null, "Selecione uma linha para excluir");
        } else {
            Object[] options = {"Sim", "Cancelar"};
            int retornoExcluir = JOptionPane.showOptionDialog(null, "Tens certeza que deseja excluir ...?", "Informação", JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[0]);

            if (retornoExcluir == JOptionPane.YES_OPTION) {

                int idExcluir = (int) tableCursoLista.getValueAt(linha, 0);

                boolean retorno = this.professorControl.excluirCurso(this.professor.getId(), idExcluir);

                if (retorno) {
                    this.carregarTabela();
                    JOptionPane.showMessageDialog(null, "Curso excluído com sucesso.");
                } else {
                    JOptionPane.showMessageDialog(null, "Erro ao excluír o curso.");
                }

            } else {

            }
        }
//        this.gerenciarBotoes(true, false, false, false, false);
    }//GEN-LAST:event_buttonExcluirActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAdicionar;
    private javax.swing.JButton buttonExcluir;
    private javax.swing.JComboBox<String> comboCurso;
    private javax.swing.JLabel curso;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel labelId;
    private javax.swing.JLabel labelMatricula;
    private javax.swing.JLabel labelNome;
    private javax.swing.JPanel panelProfessor;
    private javax.swing.JScrollPane scrollPaneCursoLista;
    private javax.swing.JTable tableCursoLista;
    private javax.swing.JTextField textId;
    private javax.swing.JTextField textMatricula;
    private javax.swing.JTextField textNome;
    // End of variables declaration//GEN-END:variables
}
