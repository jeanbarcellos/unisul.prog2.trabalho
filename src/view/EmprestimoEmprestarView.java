package view;

import control.ExemplarControl;
import control.LivroControl;
import java.awt.Dimension;
import java.util.List;
import javax.swing.JOptionPane;
import model.Exemplar;
import view.tm.EmprestimoDisponibilidadeTM;

/**
 *
 * @author Jean Barcellos <jeanbarcellos@hotmail.com>
 */
public class EmprestimoEmprestarView extends javax.swing.JInternalFrame {

    private static final long serialVersionUID = -799537257491720564L;

    private ExemplarControl exemplarControl;
    private EmprestimoDisponibilidadeTM disponvelTM;

    /**
     * Creates new form EmprestimoEmprestarView
     */
    public EmprestimoEmprestarView() {
        initComponents();

        this.exemplarControl = new ExemplarControl();
        this.carregarTabela();
    }

    /**
     * Posiciona o painel no mei da tela
     */
    public void setPosicao() {
        Dimension d = this.getDesktopPane().getSize();
        this.setLocation((d.width - this.getSize().width) / 2, (d.height - this.getSize().height) / 2);
    }

    /**
     * Popula a tabela com a lista de exemplares
     */
    public static void carregarTabela() {
        List<Exemplar> lista = new ExemplarControl().getExemplares();

        EmprestimoDisponibilidadeTM exemplarTM = new EmprestimoDisponibilidadeTM(lista);
        tableListaExemplar.setModel(exemplarTM);
        tableListaExemplar.getColumnModel().getColumn(0).setPreferredWidth(50);
        tableListaExemplar.getColumnModel().getColumn(1).setPreferredWidth(300);
        tableListaExemplar.getColumnModel().getColumn(2).setPreferredWidth(400);
        tableListaExemplar.getColumnModel().getColumn(3).setPreferredWidth(400);
        tableListaExemplar.getColumnModel().getColumn(4).setPreferredWidth(400);
    }

    private boolean validarBuscar() {
        String licalizar = textlocalizar.getText();
        int indice = comboBoxPor.getSelectedIndex();

        if (licalizar.equals("")) {
            JOptionPane.showMessageDialog(null, "Você deve informar alguma palavra-chave.");
            textlocalizar.requestFocus();
            return false;
        }
        if (indice == 0) {
            JOptionPane.showMessageDialog(null, "Você deve informar o tipo de dado.");
            comboBoxPor.requestFocus();
            return false;
        }
        return true;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelExemplares = new javax.swing.JPanel();
        scrollPaneExemplareLista = new javax.swing.JScrollPane();
        tableListaExemplar = new javax.swing.JTable();
        labelPor = new javax.swing.JLabel();
        comboBoxPor = new javax.swing.JComboBox<>();
        labelLocalizar = new javax.swing.JLabel();
        textlocalizar = new javax.swing.JTextField();
        buttonBuscar = new javax.swing.JButton();
        buttonNovo = new javax.swing.JButton();

        setClosable(true);

        panelExemplares.setBorder(javax.swing.BorderFactory.createTitledBorder("Exemplares Disponíveis"));

        tableListaExemplar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Título", "Autor", "Edição", "Localização"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scrollPaneExemplareLista.setViewportView(tableListaExemplar);

        labelPor.setText("Por:");

        comboBoxPor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione", "Titulo", "Autor", "Edição" }));
        comboBoxPor.setActionCommand("");

        labelLocalizar.setText("Localizar:");

        buttonBuscar.setText("Pesquisar");
        buttonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBuscarActionPerformed(evt);
            }
        });

        buttonNovo.setText("Emprestar");
        buttonNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonNovoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelExemplaresLayout = new javax.swing.GroupLayout(panelExemplares);
        panelExemplares.setLayout(panelExemplaresLayout);
        panelExemplaresLayout.setHorizontalGroup(
            panelExemplaresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelExemplaresLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelExemplaresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelExemplaresLayout.createSequentialGroup()
                        .addComponent(scrollPaneExemplareLista)
                        .addContainerGap())
                    .addGroup(panelExemplaresLayout.createSequentialGroup()
                        .addGroup(panelExemplaresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(buttonNovo)
                            .addGroup(panelExemplaresLayout.createSequentialGroup()
                                .addComponent(labelLocalizar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(textlocalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(labelPor)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(comboBoxPor, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(buttonBuscar)))
                        .addGap(147, 199, Short.MAX_VALUE))))
        );
        panelExemplaresLayout.setVerticalGroup(
            panelExemplaresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelExemplaresLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelExemplaresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelPor)
                    .addComponent(comboBoxPor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelLocalizar)
                    .addComponent(textlocalizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonBuscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(scrollPaneExemplareLista, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonNovo)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelExemplares, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelExemplares, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBuscarActionPerformed

        String chave = textlocalizar.getText();
        int indice = comboBoxPor.getSelectedIndex();

        boolean retorno = this.validarBuscar();

        if (retorno) {
            List<Exemplar> lista = null;

            switch (indice) {
                case 1:
                    lista = exemplarControl.buscarPeloTitulo(chave);
                    break;
                case 2:
                    lista = exemplarControl.buscarPeloAutor(chave);
                    break;
                case 3:
                    lista = exemplarControl.buscarPelaEdicao(chave);
                    break;
                default:
                    break;
            }

            if (lista != null) {
                EmprestimoDisponibilidadeTM exemplarTM = new EmprestimoDisponibilidadeTM(lista);
                tableListaExemplar.setModel(exemplarTM);
                // MESMOS VALORES EM CAREEGAR TAMBELA
                tableListaExemplar.getColumnModel().getColumn(0).setPreferredWidth(50);
                tableListaExemplar.getColumnModel().getColumn(1).setPreferredWidth(300);
                tableListaExemplar.getColumnModel().getColumn(2).setPreferredWidth(400);
                tableListaExemplar.getColumnModel().getColumn(3).setPreferredWidth(400);
                tableListaExemplar.getColumnModel().getColumn(4).setPreferredWidth(400);
            } else {
                JOptionPane.showMessageDialog(null, "Não há exemplares cadastrados ou dsponíveis com os dados informados.");
            }
        }
    }//GEN-LAST:event_buttonBuscarActionPerformed

    private void buttonNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonNovoActionPerformed

        CadastroAlunoInserirView inserirView = new CadastroAlunoInserirView();
        Principal.desktop.add(inserirView);
        inserirView.getFont();
        inserirView.setPosicao();
        inserirView.setVisible(true);
    }//GEN-LAST:event_buttonNovoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonBuscar;
    private javax.swing.JButton buttonNovo;
    private javax.swing.JComboBox<String> comboBoxPor;
    private javax.swing.JLabel labelLocalizar;
    private javax.swing.JLabel labelPor;
    private javax.swing.JPanel panelExemplares;
    private javax.swing.JScrollPane scrollPaneExemplareLista;
    public static javax.swing.JTable tableListaExemplar;
    private javax.swing.JTextField textlocalizar;
    // End of variables declaration//GEN-END:variables
}
