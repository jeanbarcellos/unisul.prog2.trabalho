package tela;

import tela.tm.AlunoTM;
import model.Aluno;
import control.AlunoControl;

import java.awt.Dimension;
import java.util.List;
import javax.swing.JOptionPane;

/**
 * CadastroAlunoView
 *
 * @author Jean Barcellos <jeanbarcellos@hotmail.com>
 */
public class CadastroAlunoView extends javax.swing.JInternalFrame {

    private static final long serialVersionUID = -1989171307165005090L;
    private AlunoControl alunoControl;

    /**
     * Creates new form CadastroAlunoView
     */
    public CadastroAlunoView() {
        initComponents();

        this.alunoControl = new AlunoControl();

        this.carregarTabela();
    }

    /**
     * Posiciona o painel no mei da tela
     */
    public void setPosicao() {
        Dimension d = this.getDesktopPane().getSize();
        this.setLocation((d.width - this.getSize().width) / 2, (d.height - this.getSize().height) / 2);
    }

    /**
     * Popula a tabela com a lista de alunos
     */
    public static void carregarTabela() {
        List<Aluno> lista = new AlunoControl().getAlunos();

        AlunoTM alunoTM = new AlunoTM(lista);
        tableAlunoLista.setModel(alunoTM);
        tableAlunoLista.getColumnModel().getColumn(0).setPreferredWidth(50);
        tableAlunoLista.getColumnModel().getColumn(1).setPreferredWidth(250);
        tableAlunoLista.getColumnModel().getColumn(2).setPreferredWidth(50);
        tableAlunoLista.getColumnModel().getColumn(3).setPreferredWidth(250);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelAlunosCadastrados = new javax.swing.JPanel();
        scrollPaneListaAluno = new javax.swing.JScrollPane();
        tableAlunoLista = new javax.swing.JTable();
        labelPor = new javax.swing.JLabel();
        comboBoxPor = new javax.swing.JComboBox<>();
        labelLocalizar = new javax.swing.JLabel();
        textlocalizar = new javax.swing.JTextField();
        buttonRecarregar = new javax.swing.JButton();
        buttonBuscar = new javax.swing.JButton();
        buttonNovo = new javax.swing.JButton();
        buttonDetalhar = new javax.swing.JButton();
        buttonEditar = new javax.swing.JButton();
        buttonExcluir = new javax.swing.JButton();

        setClosable(true);
        setTitle("Cadastro de Alunos");

        panelAlunosCadastrados.setBorder(javax.swing.BorderFactory.createTitledBorder("Alunos Cadastrados"));

        tableAlunoLista.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Nome", "Matrícula", "Curso"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableAlunoLista.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        scrollPaneListaAluno.setViewportView(tableAlunoLista);
        if (tableAlunoLista.getColumnModel().getColumnCount() > 0) {
            tableAlunoLista.getColumnModel().getColumn(0).setResizable(false);
            tableAlunoLista.getColumnModel().getColumn(0).setPreferredWidth(40);
            tableAlunoLista.getColumnModel().getColumn(2).setResizable(false);
            tableAlunoLista.getColumnModel().getColumn(3).setResizable(false);
        }

        labelPor.setText("Por:");

        comboBoxPor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione", "Nome", "Matrícula" }));
        comboBoxPor.setActionCommand("");

        labelLocalizar.setText("Localizar:");

        buttonRecarregar.setText("Recarregar Lista");
        buttonRecarregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRecarregarActionPerformed(evt);
            }
        });

        buttonBuscar.setText("Pesquisar");
        buttonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBuscarActionPerformed(evt);
            }
        });

        buttonNovo.setText("Novo");
        buttonNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonNovoActionPerformed(evt);
            }
        });

        buttonDetalhar.setText("Detalhar");
        buttonDetalhar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDetalharActionPerformed(evt);
            }
        });

        buttonEditar.setText("Editar");
        buttonEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEditarActionPerformed(evt);
            }
        });

        buttonExcluir.setText("Excluir");
        buttonExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonExcluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelAlunosCadastradosLayout = new javax.swing.GroupLayout(panelAlunosCadastrados);
        panelAlunosCadastrados.setLayout(panelAlunosCadastradosLayout);
        panelAlunosCadastradosLayout.setHorizontalGroup(
            panelAlunosCadastradosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAlunosCadastradosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelAlunosCadastradosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelAlunosCadastradosLayout.createSequentialGroup()
                        .addComponent(labelLocalizar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(textlocalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(labelPor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(comboBoxPor, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buttonBuscar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonRecarregar))
                    .addGroup(panelAlunosCadastradosLayout.createSequentialGroup()
                        .addComponent(buttonNovo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonDetalhar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonEditar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonExcluir))
                    .addComponent(scrollPaneListaAluno, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        panelAlunosCadastradosLayout.setVerticalGroup(
            panelAlunosCadastradosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAlunosCadastradosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelAlunosCadastradosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelPor)
                    .addComponent(comboBoxPor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelLocalizar)
                    .addComponent(textlocalizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonBuscar)
                    .addComponent(buttonRecarregar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(scrollPaneListaAluno, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelAlunosCadastradosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonNovo)
                    .addComponent(buttonEditar)
                    .addComponent(buttonExcluir)
                    .addComponent(buttonDetalhar))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelAlunosCadastrados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelAlunosCadastrados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private boolean validarBuscar() {
        String licalizar = textlocalizar.getText();
        int indice = comboBoxPor.getSelectedIndex();

        if (licalizar.equals("")) {
            JOptionPane.showMessageDialog(null, "Você deve informar alguma palavra-chave.");
            textlocalizar.requestFocus();
            return false;
        }
        if (indice == 0) {
            JOptionPane.showMessageDialog(null, "Você deve informar o tipo de dado.");
            comboBoxPor.requestFocus();
            return false;
        }
        return true;

    }

    private void buttonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBuscarActionPerformed

        String chave = textlocalizar.getText();
        int indice = comboBoxPor.getSelectedIndex();

        boolean retorno = this.validarBuscar();

        if (retorno) {
            List<Aluno> lista = null;

            if (indice == 1) {
                lista = alunoControl.buscarPeloNome(chave);
            } else if (indice == 2) {
                lista = alunoControl.buscarPelaMatricula(Integer.parseInt(chave));
            }

            if (lista != null) {
                AlunoTM alunoTM = new AlunoTM(lista);
                tableAlunoLista.setModel(alunoTM);
                tableAlunoLista.getColumnModel().getColumn(0).setPreferredWidth(50);
                tableAlunoLista.getColumnModel().getColumn(1).setPreferredWidth(250);
                tableAlunoLista.getColumnModel().getColumn(2).setPreferredWidth(50);
                tableAlunoLista.getColumnModel().getColumn(3).setPreferredWidth(250);
            } else {
                JOptionPane.showMessageDialog(null, "Não há alunos cadastrados com os dados informados.");
            }
        }

    }//GEN-LAST:event_buttonBuscarActionPerformed

    private void buttonEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEditarActionPerformed


    }//GEN-LAST:event_buttonEditarActionPerformed

    private void buttonExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonExcluirActionPerformed
        int linha = tableAlunoLista.getSelectedRow();

        if (linha < 0) {
            JOptionPane.showMessageDialog(null, "Selecione uma linha para excluir");
        } else {
            Object[] options = {"Sim", "Cancelar"};
            int retornoExcluir = JOptionPane.showOptionDialog(null, "Tens certeza que deseja excluir o aluno selecionado?", "Informação", JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[0]);

            if (retornoExcluir == JOptionPane.YES_OPTION) {

                int idExcluir = (int) tableAlunoLista.getValueAt(linha, 0);

                boolean retorno = alunoControl.excluir(idExcluir);

                if (retorno) {
                    JOptionPane.showMessageDialog(null, "Aluno excluído com sucesso.");
                } else {
                    JOptionPane.showMessageDialog(null, "Erro ao excluír o aluno.");
                }

            }
            this.carregarTabela();

        }

    }//GEN-LAST:event_buttonExcluirActionPerformed

    private void buttonNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonNovoActionPerformed

        CadastroAlunoInserirView inserirView = new CadastroAlunoInserirView();
        Principal.desktop.add(inserirView);
        inserirView.getFont();
        inserirView.setPosicao();
        inserirView.setVisible(true);
    }//GEN-LAST:event_buttonNovoActionPerformed

    private void buttonDetalharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDetalharActionPerformed
        int linha = tableAlunoLista.getSelectedRow();
        if (linha < 0) {
            JOptionPane.showMessageDialog(null, "Selecione uma aluno para detalhar.");
        } else {
            int idEditar = (int) tableAlunoLista.getValueAt(linha, 0);

            CadastroAlunoDetalheView detalheView = new CadastroAlunoDetalheView(idEditar);
            Principal.desktop.add(detalheView);
            detalheView.getFont();
            detalheView.setPosicao();
            detalheView.setVisible(true);
        }
    }//GEN-LAST:event_buttonDetalharActionPerformed

    private void buttonRecarregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRecarregarActionPerformed
        this.carregarTabela();
    }//GEN-LAST:event_buttonRecarregarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonBuscar;
    private javax.swing.JButton buttonDetalhar;
    private javax.swing.JButton buttonEditar;
    private javax.swing.JButton buttonExcluir;
    private javax.swing.JButton buttonNovo;
    private javax.swing.JButton buttonRecarregar;
    private javax.swing.JComboBox<String> comboBoxPor;
    private javax.swing.JLabel labelLocalizar;
    private javax.swing.JLabel labelPor;
    private javax.swing.JPanel panelAlunosCadastrados;
    private javax.swing.JScrollPane scrollPaneListaAluno;
    public static javax.swing.JTable tableAlunoLista;
    private javax.swing.JTextField textlocalizar;
    // End of variables declaration//GEN-END:variables
}
